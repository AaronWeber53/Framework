@model Web.Controllers.UsersController.ChangePasswordModel
@using (Html.BeginForm("ChangePassword", "Users", FormMethod.Post, new { id = "ModalForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

<div class="form-horizontal">
    <h4>Update Password</h4>

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
            <button type="button" class="btn btn-primary float-right" data-dismiss="modal"><span aria-hidden="true">Cancel</span></button>
        </div>

    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


