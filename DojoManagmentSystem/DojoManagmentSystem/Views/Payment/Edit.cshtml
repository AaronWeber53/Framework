@model Business.Models.Payment

<div id="form">
    <div class="row">
        <h4 class="col-sm-2">Payment</h4>
        @if (ViewBag.IsValid)
        {

            <div id="successTag" class="alert alert-dismissible alert-success mb-0" style="padding: .4em 1em;">
                <strong>The payment has been succesfully saved.</strong>
                <script>
                    displaySaveMessage();
                </script>
            </div>
        }
    </div>
    <hr />

    @using (Html.BeginForm("Edit", "Payments", FormMethod.Post, new { id = "ModalForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.MemberID)
            @Html.HiddenFor(model => model.Member)
            @Html.HiddenFor(model => model.Amount)
            <div class="form-group">
                @Html.LabelFor(model => model.Member.FullName, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    <fieldset disabled="">
                        @Html.EditorFor(model => model.Member.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    </fieldset>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    <fieldset disabled="">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </fieldset>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EnumDropDownListFor(model => model.PaymentType, new { @class = "" })
                        @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <button type="button" class="btn btn-primary float-right" data-dismiss="modal"><span aria-hidden="true">Cancel</span></button>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
