@model Business.Models.Payment

@using (Html.BeginForm("Create", "Payments", FormMethod.Post, new { id = "ModalForm" }))

{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Payment</h4>
    <hr />
    @Html.HiddenFor(model => model.MemberID)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Member.FullName, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            <fieldset disabled="">
                @Html.EditorFor(model => model.Member.FullName, new { htmlAttributes = new { @class = "form-control" } })
            </fieldset>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Payment towards", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            <select name="membershipId" class="">
                @foreach (var membership in Model.Member.DisciplineEnrolledMembers.Where(d => !d.IsArchived).OrderBy(d => d.EndDate))
                {
                    <option value="@membership.Id">@membership.Discipline.Name - $@membership.RemainingCost</option>
                }
                <option value="0">None</option>

            </select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.PaymentType, "Select Payment Type", new { @class = "" })
            @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-primary" />
            <button type="button" class="btn btn-primary float-right" data-dismiss="modal"><span aria-hidden="true">Cancel</span></button>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}