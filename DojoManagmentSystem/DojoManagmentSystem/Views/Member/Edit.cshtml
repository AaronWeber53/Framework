@model Business.Models.Member

<div id="form">
    <div class="row">
        <h4 class="col-sm-2">Member</h4>
        </div>
            <hr />

    @using (Ajax.BeginForm("Edit", new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        UpdateTargetId = "form"
    }))
    {
        @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group row">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @id = "memberNote" } })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2">
                        <input type="button" value="Remove" class="btn btn-sm btn-dark" onclick="getElementById('memberNote').value = ''" />
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.IsInstructor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="custom-control custom-checkbox">
                            @Html.EditorFor(model => model.IsInstructor, new { htmlAttributes = new { @class = "custom-control-input", id = "IsInstructor" } })
                            <label class="custom-control-label" for="IsInstructor"></label>
                        </div>
                    </div>
                </div>

                @if (Model.HasUser)
                {
                    @Html.HiddenFor(m => m.User.Id)
                    @Html.HiddenFor(model => model.User.Username);
                    <div class="form-group row">
                        @Html.LabelFor(model => model.User.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <fieldset disabled="">
                                @Html.EditorFor(model => model.User.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.User.Username, "", new { @class = "text-danger" })
                            </fieldset>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-danger btn-sm modal-link" data-targeturl="/Users/Delete/@Model.User.Id">Remove User</button>
                        </div>
                    </div>
                }

                    <div class="form-group row">
                        <div class="col-md-offset-2 col-md-1">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                        @if (ViewBag.IsValid)
                        {

                            <div id="successTag" class="alert alert-dismissible alert-success mb-0" style="padding: .4em 1em;">
                                <strong>The member has been succesfully saved.</strong>
                                <script>
                                    displaySaveMessage();
                                </script>
                            </div>
                        }

                    </div>
            </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
